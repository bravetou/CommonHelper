apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // https://mvnrepository.com/artifact/com.android.support/multidex
    implementation group: 'com.android.support', name: 'multidex', version: MULTIDEX_VERSION
    // implementation 'net.lingala.zip4j:zip4j:1.3.2'
    // implementation 'com.github.junrar:junrar:1.0.1'
}

// 打包源码 Jar
//task makeJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    // from(android.sourceSets.main.java.srcDirs)
//    classifier = 'v-' + android.defaultConfig.versionName.replace('.', '-')
//}
//
//artifacts {
//    archives makeJar
//}

// 项目引用的版本号，比如compile 'com.yanzhenjie:andserver:1.0.1'中的1.0.1就是这里配置的。
version = "1.0.0"

// 定义两个链接，下面会用到。
def siteUrl = 'https://github.com/bravetou/CommonHelper' // 项目主页。
def gitUrl = 'https://github.com/bravetou/CommonHelper.git' // Git仓库的url。

// 唯一包名，比如compile 'com.yanzhenjie:andserver:1.0.1'中的com.yanzhenjie就是这里配置的。
group = "com.brave.common"
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'jar'
                // 可选，项目名称
                name 'CommonHelper'
                // 可选，项目描述
                description 'Collection items commonly used help classes, tool classes, large component base classes, and so on'
                // 项目主页，这里是引用上面定义好
                url siteUrl
                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 填写开发者基本信息
                developers {
                    developer {
                        id 'bravetou' // 开发者的id
                        name 'brave Tao' // 开发者名字
                        email 'bravetou@aliyun.com' // 开发者邮箱
                    }
                }
                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址
                    developerConnection gitUrl // Git仓库地址
                    url siteUrl // 项目主页
                }
            }
        }
    }
}

// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}

// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    // Bintray的用户名
    user = properties.getProperty("bintray.user")
    // Bintray刚才保存的ApiKey
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图）
        repo = "maven"
        // 发布到Bintray上的项目名字，这里的名字不是compile 'com.yanzhenjie:andserver:1.0.1'中的andserver
        name = "CommonHelper"
        // Bintray的用户名，2016年11月更新
        userOrg = 'bravetou'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        // 是否是公开项目
        publish = true
    }
}